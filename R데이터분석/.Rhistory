clientID <- "aQ2Jmueot4FBm2rv1DT2"
clientPW <- "8LO9jN8EDB"
# 2. 기본 URL
urlStr <- "https://openapi.naver.com/v1/search/blog.xml?"
# 3. 검색어 설정 및 UTF-8 URL encoding
searchQuery <- paste("query=",STR,sep="")
# 3-1. UTF-8 encoding
searchStr <- iconv(searchQuery, to="UTF-8")
# 3-2. URL encoding
searchStr <- URLencode(searchStr)
# 4. 나머지 요청변수 설정(유사도 정렬)
start <- as.character(1 + 100*(n-1))
otherStr <- paste("&display=100&start=",start,"&sort=sim",sep="")
# 5. URL 완성
reqURL <- paste(urlStr, searchStr, otherStr, sep="")
# httr 패키지가 없을 때 library는 오류, require는 그냥 지나감
if(require(httr)){
print("package exists")
}else{
print("need to install httr package")
}
# 6. httr 패키지(GET() 이용 인증정보 담아 url 호출) library(httr)
# 7. GET 함수 호출
apiResult <- httr::GET(reqURL,
add_headers("X-Naver-Client-Id"=clientID,
"X-Naver-Client-Secret"=clientPW))
# 8. 호출결과 확인
# str(apiResult)
# apiResult$content
# 9. raw data --> char로 변경
blogData <- rawToChar(apiResult$content)
# 10. encoding 변경
Encoding(blogData) <- "UTF-8"
return(blogData)
}
# 함수 저장
save(get_blogData, file="get_blogData.rdata")
save(get_blogData, file="get_blogData.rdata")
rawData = ""
temp <- readLines(con="data\\pork_do.txt", encoding = "UTF-8")
ud <- data.frame(temp,rep("ncn",time=length(temp)),
stringsAsFactors = F)
buildDictionary(ext_dic=c("woorimalsam",'insighter', 'sejong'),
user_dic=ud, replace_usr_dic=T)
rm(temp)
for (i in 1:10){
blogData <- get_blogData("돼지고기",i) # 1 ~ 10
copyData <- gsub("<.*?>"," ", blogData)
copyData <- str_extract_all(copyData,"[가-힣]{1,}")
copyData <- unlist(copyData)
copyData <- paste(copyData, collapse=" ")
copyData <- sapply(copyData, KoNLP::extractNoun, USE.NAMES = F)
copyData <- unlist(copyData)
copyData <- copyData[,1]
rawData <- c(rawData, copyData, sep="")
}
head(rawData)
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("statistics\\descriptive.csv", header=T)
data <- read.csv("..\\..\\..\\statistics\\descriptive.csv", header=T)
head(data)
head(data)
length(data)
dim(data)
length(data);length(data$survey)
str(data);str(data$survey)
length(data$gender)
summary(data$gender)  # 딱히 의미없음
table(data$gender)    # 각 성별 빈도수 - outliner(0,5) 확인
data <- subset(data, data$gender==1 || data$gender==2)
data <- subset(data, data$gender==1 || data$gender==2)  # 성별 outlier 제거
x <- table(data$gender)
x; barplot(x)
data <- subset(data, data$gender==1 || data$gender==2)  # 성별 outlier 제거
x <- table(data$gender)
x; barplot(x)
data <- subset(data, data$gender==1 | data$gender==2)  # 성별 outlier 제거
x <- table(data$gender)
x; barplot(x)
prop.table(x)
y <- round(prop.table(x)*100, 2)
y
y
y <- round(prop.table(x)*100, 2);
length(data$level)
summart(data$level)
length(data$level)
summary(data$level)
table(data$level)
x1 <- table(data$level)
barplot(x1)
survey <- data$survey
survey
survey <- data$survey
survey
summary(survey) # 만족도(5점 척도)인 경우 의미있음 -> 2.6(평균이상)
x1 <- table(survey)
x1
hist(survey)
pie(x1)
survey <- data$survey
survey
summary(survey) # 만족도(5점 척도)인 경우 의미있음 -> 2.6(평균이상)
x1 <- table(survey)
x1
hist(survey)
pie(x1)
length(data$cost)
summary(data$cost)  # 요약통계량 - 의미있음(mean=8.784)
plot(data$cost)
data <- subset(data, data$cost >=2 & data$cost <= 10)
data
x <- data$cost
mean(x)
mean(x)
median(x)
sort(x)
sort(x, decreasing=T)
quantile(x, 1/4)
quantile(x, 2/4)
quantile(x, 3/4)
quantile(x, 4/4)
var(x)
sd(x)
sqrt(var(x))
table(data$cost)
hist(data$cost)
plot(data$cost)
var(x) == sd(x)^2
var(x)
sd(x)
sqrt(var(x))
sd(x)^2
View(data)
View(data)
data$cost2[data$cost >=1 & data$cost <=3] <- 1
data$cost2[data$cost >=4 & data$cost <=6] <- 2
data$cost2[data$cost >=7] <- 3
tbl_cost2 <- table(data$cost2)
barplot(tbl_cost2)
pie(tbl_cost2)
tbl_cost2 <- table(data$cost2)
barplot(tbl_cost2)
pie(tbl_cost2)
install.packages("moments")
library(moments)
cost <- data$cost
cost
# 확률밀도 분포 곡선
lines(density(cost), col"blue")
# 확률밀도 분포 곡선
lines(density(cost), col="blue")
hist(cost, freq = F)
# 확률밀도 분포 곡선
lines(density(cost), col="blue")
hist(cost, freq = F)
# 확률밀도 분포 곡선
lines(density(cost), col="blue")
# 표준정규분포 곡선
x <- seq(0, 8, 0.1)
curve(dnorm(x, mean(cost), sd(cost)), col="red", add=T)
rm(ud, blogData, copyData, i, rawData)
rm(get_blogData)
# ?dbinom # 이항분포
# 성공확률 90%일 때, 3회 시행 시 성공횟수 각각의 확률
dbinom(0,3,0.9)
# 성공확률 90%일 때, 3회 시행 시 성공 2회의 확률
dbinom(2,3,0.9)
# 성공확률 90%일 때, 3회 시행 시 성공 2회의 확률
dbinom(3,3,0.9)
for (i in 0:n){
cat(i,"번 성공 확률: ", dbinom(i, 3, 0.9), "\n", sep="")
result <- append(result, dbinom(i, 3, 0.9))
}
# 확률분포표 확인
n = 3
result <- numeric()
for (i in 0:n){
cat(i,"번 성공 확률: ", dbinom(i, 3, 0.9), "\n", sep="")
result <- append(result, dbinom(i, 3, 0.9))
}
result
qnorm(0.02275, mean=80, sd= 5)
dnorm(0.02275, mean=80, sd= 5)
qnorm(0.02275, mean=80, sd= 5)
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-2,2,length=200)
y=dnorm(x)
polygon(c(-2,x,2),c(0,y,0),col="gray")
qnorm(0.02275, mean=80, sd= 5)
pnorm(70, 80, 5)
qnorm(0.02275, 80, 5)
> y=dnorm(x)
th=200)
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-4,1,length=200)
y=dnorm(x)
polygon(c(-4,x,1),c(0,y,0),col="gray")
y=dnorm(x)
ength=200)
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-4,-2,length=200)
y=dnorm(x)
polygon(c(-4,x,1),c(0,y,0),col="gray")
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-4,-2,length=200)
y=dnorm(x)
polygon(c(-4,x,-2),c(0,y,0),col="gray")
x=seq(-4,4,length=200)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(-4,-2,length=200)
y=dnorm(x, 80, 5)
polygon(c(-4,x,-2),c(0,y,0),col="gray")
pnorm(70, 80, 5)
qnorm(0.02275, 80, 5)
x=seq(0,100,length=200)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length=200)
y=dnorm(x, 80, 5)
polygon(c(0,x,70),c(0,y,0),col="gray")
x=seq(60,100,length=200)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length=200)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
install.packages("purrr")
install.packages("purrr")
purrr
rbernoulli
library(purrr)
detach(purrr)
detach("package:purrr", unload = TRUE)
knitr::opts_chunk$set(echo = TRUE)
n = 20
p = 1/5
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 2) 8개 이상 맞출 확률
dbinom(8:20, n, p)
# 2) 8개 이상 맞출 확률
dbinom(8, n, p)
# 2) 8개 이상 맞출 확률
dbinom(8:20, n, p)
# 2) 8개 이상 맞출 확률
sum(dbinom(8:20, n, p))
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
# 2. CEO에게 해당 블라인드 테스트 진행을 제안하자, CEO는 100명 중 최소 40명이
# 맥주를 맞힐 확률이 95% 이상이라면 $170M을 기꺼이 투자하겠다고 밝혔다.
# 이 기획을 서포트 하기 위해 R을 이용해 확률을 구해보세요.
# (단, 테스트 진행 표본수(n)과 성공횟수(k)를 변동시키며 값을 확인 할 수 있도록 UDF로 구현해보세요)
f <- function(n, k){
p = 0.5
return(sum(dbinom(0:k, n, p)))
}
f(100,40)
# 3. 신입사원 문제 표준정규분포도 작성
pnorm(70, 80, 5)
qnorm(0.02275, 80, 5)
x=seq(60,100,length=200)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length=200)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
x=seq(60,100)
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length)
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70,length)
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
qnorm(0.00001, 80, 5) = 69.99999
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
qnorm(0.00001, 80, 5)
x=seq(60,100)
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2, col="blue")
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
plot(x,y,type="l", lwd=2)
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=2)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
?plot
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l")
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70),c(0,y,0),col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), border = NA, col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
x=seq(-1, 1)
y=dnorm(x, 0, 5)
plot(x,y,type="l", lwd=3)
x=seq(-1,pnorm(70, 80, 5))
y=dnorm(x, 0, 5)
polygon(c(-1,x,1), c(0,y,0), col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
z = (70-80)/5
x=seq(-6, 6)
y=dnorm(x, 0, 5)
plot(x,y,type="l", lwd=3)
x=seq(-6, z)
y=dnorm(x, 0, 5)
polygon(c(-6, x, z), c(0,y,0), col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
z = (70-80)/5
x=seq(-6, 6)
y=dnorm(x)
plot(x,y,type="l", lwd=3)
x=seq(-6, z)
y=dnorm(x)
polygon(c(-6, x, z), c(0,y,0), col="gray")
f(100,40)
f <- function(n, k){
p = 0.5
return(sum(dbinom(k:n, n, p)))
}
f(100,40)
f <- function(n, k){
return(sum(dbinom(k:n, n, 0.5)))
}
p = f(100,40)
if (p>=0.95){
print("투자")
}else{
print("안투자")
}
if (p>=0.95){
print("투자하겠소.")
}else{
print("에잉 쯧쯧")
}
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60,100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0,70)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
z = (70-80)/5
x=seq(-6, 6)
y=dnorm(x)
plot(x, y, lwd=3)
x=seq(-6, z)
y=dnorm(x)
polygon(c(-6, x, z), c(0,y,0), col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60, 100, length=100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0, 70, length=100)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
z = (70-80)/5
x=seq(-6, 6, length=100)
y=dnorm(x)
plot(x,y,type="l", lwd=3)
x=seq(-6, z, length=100)
y=dnorm(x)
polygon(c(-6, x, z), c(0,y,0), col="gray")
# 3. 신입사원 문제 표준정규분포도 작성
# pnorm(70, 80, 5) = 0.02275
# qnorm(0.02275, 80, 5) = 69.99999
par(mfrow = c(1, 2), pty = "s")
x=seq(60, 100, length=100)
y=dnorm(x, 80, 5)
plot(x,y,type="l", lwd=3)
x=seq(0, 70, length=100)
y=dnorm(x, 80, 5)
polygon(c(60,x,70), c(0,y,0), col="gray")
z = (70-80)/5
x=seq(-4, 4, length=100)
y=dnorm(x)
plot(x,y,type="l", lwd=3)
x=seq(-4, z, length=100)
y=dnorm(x)
polygon(c(-4, x, z), c(0,y,0), col="gray")
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
# 2) 8개 이상 맞출 확률
sum(dbinom(19:n, n, p))
# 2) 8개 이상 맞출 확률
sum(dbinom(1:n, n, p))
# 2) 8개 이상 맞출 확률
sum(dbinom(15:n, n, p))
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
(4/5)^20
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 1) 다 틀릴 확률
dbinom(0, n, p)
(4/5)^20
# ?dbinom # 이항분포
# 성공확률 90%일 때, 3회 시행 시 0번 성공할 확률
dbinom(0,3,0.9)
# 성공확률 90%일 때, 3회 시행 시 3번 성공할 확률
dbinom(3,3,0.9)
# 1. 5지선다인 20문항의 시험에서 랜덤하게 답안을 고를 경우 다음의 확률은 어떻게 되겠는가?
n = 20
p = 1/5
# 1) 다 틀릴 확률
dbinom(0, n, p)
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
# 2) 8개 이상 맞출 확률
sum(dbinom(8:n, n, p))
