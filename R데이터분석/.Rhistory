?apply
m <- matrix(1:9, ncol=3, byrow=TRUE)
apply(m,1,max)
apply(m,2,mean)
apply(m,2,min)
m
?c
# 수열생성 1)콜론
vec1 <- 1:5
vec1
str(vec1)   # structure
class(vec1) # class
mode(vec1)  # storage mode
str(vec1)   # structure
class(vec1) # class
mode(vec1)  # storage mode
# table() 사용 예시
table(iris_df$Species)
table(iris_df)
View(table(iris_df))
# 도움말 불러내는 방식 2가지
?table
# table() 사용 예시
table(iris_df$Sepal.Length)
# table() 사용 예시
str(table(iris_df$Sepal.Length))
# table() 사용 예시
table(iris_df$Species)
str(vec1)   # structure
class(vec1) # class
mode(vec1)  # storage mode
# TRUE / FALSE
1 %in% c(1,3,5)
6 %in% c(1,3,5)
knitr::opts_chunk$set(echo = TRUE)
head(student2,2)
# 데이터가 [Tab]이 아닌 다른 문자로 구분되어 있을 때
student2 <- read.table(file='student2.txt', sep=";", header=T, stringsAsFactors = F)
getwd()
setwd('C:/rsource/data'); getwd()
# header가 있을 때
student1 <- read.table(file='student1.txt', sep="", header=T, stringsAsFactors = F)
student1
# 데이터가 [Tab]이 아닌 다른 문자로 구분되어 있을 때
student2 <- read.table(file='student2.txt', sep=";", header=T, stringsAsFactors = F)
student2
# 파일 탐색기에서 직접 선택
student1_2 <- read.table(file=file.choose(), sep="", header=T, stringsAsFactors = F)
student1_2
head(student2,2)
student2; head(student2,2); tail(student2,2)
install.packages('tibble')
library(tibble)
iris_df <- iris
(iris_df1 <- as_tibble(iris_df))
vgnette('tibble')
vignette('tibble')
?vignette
vignette('tibble')
vignette('tibble')
?vignette
student3 <- read.table(file='C:\\rsource\\data\\student3.txt',
sep=" ", header=T,
na.strings="-")
student3
student4 <- read.table(file='C:\\rsource\\data\\student4.txt',
sep=",", header=T,
na.strings=c("-","+"))  # '-'가 NA로 변환됨
student4
student4 <- read.table(file='C:\\rsource\\data\\student4.txt',
sep=",", header=T,
na.strings=c("-","+","$"))  # '-'가 NA로 변환됨
student4
?read.table
(student3 <- read.table(file='C:\\rsource\\data\\student3.txt',
sep=" ", header=T,
na.strings="-"))  # '-'가 NA로 변환됨
(student4 <- read.table(file='C:\\rsource\\data\\student4.txt',
sep=",", header=T,
na.strings=c("-","+","$")))  # '-'가 NA로 변환됨
library(xlsx)
studentex <- read.table(file='C:\\rsource\\data\\studentexcel.xlsx',
sheetIndex=1, encoding="UTF-8")
studentex <- read.xlsx(file='C:\\rsource\\data\\studentexcel.xlsx',
sheetIndex=1, encoding="UTF-8")
studentex
USArrests_df <- USArrests
USArrests_df
?barplot
barplot(USArrests_df$Murder/USArrests_df$UrbanPop)
USArrests_df
barplot(USArrests_df$Murder/USArrests_df$UrbanPop ~ USArrests_df[0])
barplot(USArrests_df$Murder/USArrests_df$UrbanPop ~ USArrests_df[0,])
USArrests_df$"murder/pop" <- USArrests_df$Murder/USArrests_df$UrbanPop
USArrests_df
test <- head(USArrests,7)
test <- head(USArrests_df,7)
barplot(test$`murder/pop`)
USArrests_df <- USArrests_df[order(USArrests_df$`murder/pop`, decreasing=T)]
USArrests_df <- USArrests_df[order(USArrests_df$`murder/pop`, decreasing=T),]
USArrests_df
result <- head(USArrests_df,7)
barplot(result$`murder/pop`)
USArrests_df
USArrests_df[0]
names(USArrests_df[0]) <- "state"
names(USArrests_df[1]) <- "state"
USArrests_df
USArrests_df[1]
USArrests_df[0]
colnames(USArrests_df[0]) <- "state"
USArrests_df[0]
USArrests_df <- USArrests
USArrests_df$"murder/pop" <- USArrests_df$Murder/USArrests_df$UrbanPop
USArrests_df <- USArrests_df[order(USArrests_df$`murder/pop`, decreasing=T),]
result <- head(USArrests_df,7)
barplot(result$`murder/pop`)
barplot(result$`murder/pop`,xlab='state',ylab='murder/pop')
barplot(result$`murder/pop`,xlab='state',ylab='murder/pop',names.arg = USArrests_df[0])
barplot(result$`murder/pop`,xlab='state',ylab='murder/pop')
USArrests_df[0,]
USArrests_df[0]
barplot(result$`murder/pop`,
xlab='state',
ylab='murder/pop',
col=rgb(0.1,0.2,0.3,0.4,0.5,0.6,0.7))
barplot(result$`murder/pop`,
xlab='state',
ylab='murder/pop',
col=rgb(0.1,0.2,0.3,0.4,0.5,0.6,0.6))
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
xlab='state',
ylab='murder/pop',
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','indigo','violet')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','blue','violet')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','violet','purple')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
USArrests_df <- tibble::rownames_to_column(USArrests_df)
USArrests_df
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=USArrests_df$rowname,
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
USArrests_df <- USArrests
USArrests_df$"murder/pop" <- USArrests_df$Murder/USArrests_df$UrbanPop
USArrests_df <- USArrests_df[order(USArrests_df$`murder/pop`, decreasing=T),]
USArrests_df <- tibble::rownames_to_column(USArrests_df)
result <- head(USArrests_df,7)
USArrests_df[0]
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
graph = barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=c('red','orange','yellow','green','blue','purple','violet')
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7)
)
(7)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7)
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=4
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=1
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=3
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=5
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2, font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=3, font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2, font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=4, font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=3, font.main=2
)
barplot(result$`murder/pop`,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2
)
USArrests_df <- USArrests
USArrests_df$ratio_mp <- USArrests_df$Murder/USArrests_df$UrbanPop
USArrests_df <- USArrests_df[order(USArrests_df$ratio_mp, decreasing=T),]
USArrests_df <- tibble::rownames_to_column(USArrests_df)
result <- head(USArrests_df,7)
USArrests_df[0]
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2
)
typeof(TRUE)
typeof("응애애")
typeof(0.00000589)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=plasma(7),
cex.main=2
)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=magma(7),
cex.main=2
)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2
)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=heat.colors(7),
cex.main=2
)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=terrain.colors(7),
cex.main=2
)
barplot(result$ratio_mp,
main="인구밀도대비 살인률",
names.arg=result$rowname,
xlab='state',
ylab='murder/pop',
col=rainbow(7),
cex.main=2
)
?grep
install.packages('stringr')
# install.packages('stringr')
library(stringr)
str_extract("홍길동35이순신45유관순25", "[0-9]{2}")
str_extract_all("홍길동35이순신45유관순25", "[0-9]{2}") # 모든 연속된 숫자 2개
unlist(str_extract_all("홍길동35이순신45유관순25", "[0-9]{2}"))
string <- 'hongkildong105lee1002you25강감찬2005'
string <- 'hongkildong105lee1002you25강감찬2005'
str_extract_all(string, '[a-z]{3}')
str_extract_all(string, '[a-z]{3,}')
str_extract_all(string, '[a-z]{3,5}')
str_extract_all(string1, '[A-z]{3}')
string1 <- 'YEShongkildong105lee1002you25강감찬2005'
str_extract_all(string1, '[A-z]{3}')
str_extract_all(string,'hong')
str_extract_all(string,'hong')
str_extract_all(string,'25')
str_extract_all(string,'[가-힣]{3}')
str_extract_all(string,'[a-z]{3}')
str_extract_all(string,'9999')
str_extract_all(string,'hong')
str_extract_all(string,'25')
str_extract_all(string,'[가-힣]{3}')
str_extract_all(string,'[a-z]{3}')
str_extract_all(string,'25')
string1 <- 'YEShongkildong105lee1002you25강감찬2005'
jumin <- '123456-3234567654321-3589621'
name <- '홍길동1234,이순신5678,강감찬1012'
# 소문자를 제외하고 추출
?str_extract_all
# 소문자를 제외하고 추출
str_extract_all(string1, '[^a-z]{1,}')
# 소문자를 제외하고 추출
str_extract_all(string1, '[^a-z]{}')
# 소문자를 제외하고 추출
str_extract_all(string1, '[^a-z]')
# 소문자를 제외하고 추출
str_extract_all(string1, '[^a-z]{1,}')
str_extract_all(string1, '[^a-z]{4}')
# 한글을 제외한 5연속 문자 추출
str_extract_all(string1, '[^가-힣]{5}')
# 주민번호 추출
str_extract_all(jumin,'[0-9]{6}-[0-9]{7}')
# 주민번호 추출해서 data frame화
df_jumin <- data.frame(unlist(str_extract_all(jumin,'[0-9]{6}-[0-9]{7}')))
df_jumin
# 주민번호 추출해서 data frame화
df_jumin <- data.frame(unlist(str_extract_all(jumin,'[0-9]{6}-[0-9]{7}')),colnames='jumin')
df_jumin
# 주민번호 추출해서 data frame화
df_jumin <- data.frame(jumin=unlist(str_extract_all(jumin,'[0-9]{6}-[0-9]{7}')))
df_jumin
name <- '홍길동1234,이순신5678,강감찬1012'
studentID=unlist(str_extract_all(name,'[0-9]{4}'))))
df_student <- data.frame(name=,unlist(str_extract_all(name,'[가-힣]{2,5}'))
studentID=unlist(str_extract_all(name,'[0-9]{4}')))
df_student <- data.frame(name=,unlist(str_extract_all(name,'[가-힣]{2,5}')),
studentID=unlist(str_extract_all(name,'[0-9]{4}')))
df_student <- data.frame(name=unlist(str_extract_all(name,'[가-힣]{2,5}')),
studentID=unlist(str_extract_all(name,'[0-9]{4}')))
df_student
?gsub
gsub('영','0','홍영기)
gsub('영','0','홍영기')
gsub('영','0','홍영기')
mat <- matrix(1:6, ncol=2)
mat
a <- data.frame(mat, 7:9)
a
b <- as.data.frame(mat, 7:9)
b
mat <- matrix(1:6, ncol=2)
mat
a <- data.frame(mat, 7:9)
a
b <- as.data.frame(mat, 7:9)
b
?as.data.frame
knitr::opts_chunk$set(echo = TRUE)
install.packages('multilinguer')
library(multilinguer)
install.packages(c('stringr',
'hash',
'tau',
'sejong',
'RSQLite',
'devtools'
),
type='binary')
install.packages(c('stringr',
'hash',
'tau',
'sejong',
'RSQLite',
'devtools'
),
type='binary')
install.packages(c('stringr',
'hash',
'tau',
'Sejong',
'RSQLite',
'devtools'
),
type='binary')
install.packages('stringr', type='binary')
install.packages('hash', type='binary')
install.packages('tau', type='binary')
install.packages('Sejong', type='binary')
install.packages('RSQLite', type='binary')
install.packages('devtools', type='binary')
install.packages('remotes')
remotes::install_github('haven-jeon/KoNLP', upgrade='never',
INSTALL_opts=c('--no-multiarch'))
library(c('stringr',
'hash',
'tau',
'Sejong',
'RSQLite',
'devtools'
))
library(stringr)
library(hash)
library(tau)
library(Sejong)
library(RSQLite)
library(devtools)
remotes::install_github('haven-jeon/KoNLP', upgrade = "never",
INSTALL_opts=c("--no-multiarch"))
install.packages('remotes')
library(remotes)
knitr::opts_chunk$set(echo = TRUE)
library(KoNLP)
