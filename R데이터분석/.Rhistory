cat("** ",i,"단 **\n",sep="")
for (j in 1:9){
cat(i,"*",j,"=",i*j,"\n")
}
cat("\n")
}
}
NineToNine(9)
library(rJava); library(KoNLP)
getwd()
seoul_data <- readLines(con='..\\..\\..\\data\\seoul.txt', encoding='UTF-8')
seoul_data
View(seoul_data)
# 명사 추출 -> KoNLP 패키지 이용
sdata <- sapply(seoul_data, KoNLP::extractNoun)
View(sdata)
# 명사 추출 -> KoNLP 패키지 이용
sdata <- sapply(seoul_data, KoNLP::extractNoun, USE.NAMES = F)
View(sdata)
sdata2 <- unlist(sdata)
?gsub
# ?gsub
sdata3 <- gsub("서울시","",sdata2)
sdata3
# 불용어 제거
sdata3 <- gsub("서울","",sdata2)
sdata3 <- gsub("서울시","",sdata2)
sdata3 <- gsub("박원순","",sdata2)
sdata3 <- gsub("[0-9]+","",sdata2)
sdata3 <- gsub("-","",sdata2)
sdata3 <- gsub("?","",sdata2)
sdata3 <- gsub(" ","",sdata2)
sdata3 <- gsub("\\.","",sdata2)
sdata3
# 불용어 제거
sdata3 <- gsub("서울","",sdata2)
sdata3 <- gsub("서울시","",sdata3)
sdata3 <- gsub("박원순","",sdata3)
sdata3 <- gsub("[0-9]+","",sdata3)
sdata3 <- gsub("-","",sdata3)
sdata3 <- gsub("?","",sdata3)
sdata3 <- gsub(" ","",sdata3)
sdata3 <- gsub("\\.","",sdata3)
sdata3
write.table(sdata3, "seoul_new.txt")
sdata4 <- read.table("seoul_new.txt")
sdata4
write.table(sdata3, "seoul_new.txt")
sdata4 <- read.table("seoul_new.txt")
sdata4
View(sdata4)
write(sdata3, "seoul_new.txt")
sdata4 <- read.table("seoul_new.txt")
View(sdata4)
sort(table(sdata4), decreasing=T)
head(sort(table(sdata4), decreasing=T),30)
wdcont <- head(sort(table(sdata4), decreasing=T),30)
# 워드 클라우드 표현
install.packages(c('RColorBrewer','wordcloud'))
library(RColorBrewer)
library(wordcloud)
palette <- brewer.pal(9,"Set1")
wordcloud(names(wordcout1),
freq=wordcount1,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
# 빈도 확인
wdcount <- head(sort(table(sdata4), decreasing=T),30)
rm(rdcout)
rm(wdcout)
wordcloud(names(wordcount),
freq=wordcount1,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wordcount),
freq=wordcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=F, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=F, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
?brewer.pal
palette <- brewer.pal(9,"Accent")
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
palette <- brewer.pal(9,"Set2")
palette <- brewer.pal(9,"Set1")
palette <- brewer.pal(9,"Pastel1")
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
palette <- brewer.pal(8,"Accent")
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
palette <- brewer.pal(8,"Dark2")
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(10,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(5,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,2),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
?wordcloud
View(wdcount)
wdcount
?brewer.pal
rm(wdcont)
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=rainbow(7))
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=rainbow(30))
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=rainbow(30))
wordcloud(names(wdcount),
freq=wdcount,
scale=c(3,0.5),
rot.per=0.25, min.freq=1,
random.order=F,random.color=T, colors=palette)
.libPaths
.libPaths()
.libPaths()
?KoNLP::buildDictionary
install.packages("sejong")
install.packages("Sejong")
buildDictionary(ext_dic=c("woorimalsam",'sejong'),
replace_usr_dic=F)
GDP_ranking <- read.csv(file="http://databank.worldbank.org/data/download/GDP_PPP.csv",
stringsAsFactors = F)
View(GDP_ranking)
str(GDP_ranking)
GDP_ranking[3,2]
names(GDP_ranking)[2] <- GDP_ranking[3,2]
View(GDP_ranking)
names(GDP_ranking)[1] <- "Country"
View(GDP_ranking)
remotes::install_github('haven-jeon/KoNLP', upgrade = "never",
INSTALL_opts=c("--no-multiarch"))
names(GDP_ranking)[4] <- GDP_ranking[3,4]
(GDP_ranking[2,5]+GDP_ranking[3,5])
cat(GDP_ranking[2,5]+GDP_ranking[3,5])
cat(GDP_ranking[2][5]+GDP_ranking[3][5])
[2,5]
GDP_ranking[2,5]
GDP_ranking[3,5]
GDP_ranking[2,5] + GDP_ranking[3,5]
temp = paste(GDP_ranking[2,5], GDP_ranking[3,5])
temp
names(GDP_ranking)[5] <- paste(GDP_ranking[2,5], GDP_ranking[3,5])
GDP_ranking[,-3]
GDP_ranking[,-3]
GDP_ranking[,-c(3,6)]
GDP_ranking[,-c(3,6)]
head(GDP_ranking[,-c(3,6)])
head(GDP_ranking[,-c(3,6)])
head(GDP_ranking[-c(1:5),-c(3,6)])
head(GDP_ranking[-c(1:5),-c(3,6)])
df <- GDP_ranking[-c(1:5),-c(3,6)]
View(df)
df <- df[order(df$Ranking),]
df <- head(df,20)
df
View(df)
df <- GDP_ranking[-c(1:5),-c(3,6)]
df <- head(df,20)
barplot(df[,4])
names(GDP_ranking)[1] <- "Country"
names(GDP_ranking)[2] <- GDP_ranking[3,2]
names(GDP_ranking)[4] <- GDP_ranking[3,4]
names(GDP_ranking)[5] <- "GDP"  # paste(GDP_ranking[2,5], GDP_ranking[3,5])
df <- GDP_ranking[-c(1:5),-c(3,6)]
df <- head(df,20)
View(df)
barplot(df$GDP)
df$GDP
as.numeric(df[,2])
df <- GDP_ranking[-c(1:5),-c(3,6)]
df[,2] <- as.numeric(df[,2])
df$GDP <- as.numeric(df$GDP)
df$GDP
df <- GDP_ranking[-c(1:5),-c(3,6)]
View(df)
str(df)
as.numeric(df$GDP)
df$Ranking <- as.numeric(df$Ranking)
as.numeric(df$Ranking)
df <- GDP_ranking[-c(1:5),-c(3,6)]
df <- data.frame(GDP_ranking[-c(1:5),-c(3,6)],na.rm=T)
df
df <- data.frame(GDP_ranking[-c(1:5),-c(3,6)])
df <- GDP_ranking[-c(1:5),-c(3,6)]
df[NA,]
df[NA,]
df <- df[-NA,]
df <- GDP_ranking[-c(1:5),-c(3,6)]
df[-NA,]
df$Ranking <- as.numeric(df$Ranking)
as.numeric(df$Ranking)
str(df)
?gsub
gsub(",","",df$GDP)
gsub(" ","",df$GDP)
df$GDP <- gsub(",","",df$GDP)
df$GDP <- gsub(" ","",df$GDP)
df$GDP
df$GDP <- gsub("-","",df$GDP)
df$GDP
df <- df[order(df$Ranking),]
df <- head(df, 20)
df
barplot(df$GDP)
df$GDP <- as.numeric(df$GDP)
barplot(df$GDP)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Country
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
col=rainbow(7),
cex.main=2
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
col=rainbow(20),
cex.main=1
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
ylim=25000,
col=rainbow(20),
cex.main=1
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=25000,
col=rainbow(20),
cex.main=1
)
barplot(df$GDP,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
# ylim=25000,
col=rainbow(20),
cex.main=1
)
df$GDP_B <- df$GDP / 1000
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
# ylim=25000,
col=rainbow(20),
cex.main=1
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
# ylim=25000,
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=25000,
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000)
col=rainbow(20)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
xlim=c("China", "Poland"),
ylim=c(0,25000),
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20)
)
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
abline(h=c(5000,10000),col=c('darkgray','lightblue',lty=c(10,10)))
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
abline(h=c(5000,10000),col=c('darkgray','lightblue',lty=c(10,10)))
GDP_ranking <<- GDP_ranking
# GDP_ranking <- read.csv(file="http://databank.worldbank.org/data/download/GDP_PPP.csv",
#                         stringsAsFactors = F)
GDP_ranking <- read.csv(file="..\\..\\..\\data\\GDP_PPP.csv",
stringsAsFactors = F)
GDP_ranking <<- GDP_ranking
names(GDP_ranking)[1] <- "Country"
names(GDP_ranking)[2] <- GDP_ranking[3,2]
names(GDP_ranking)[4] <- GDP_ranking[3,4]
names(GDP_ranking)[5] <- "GDP"  # paste(GDP_ranking[2,5], GDP_ranking[3,5])
df <- GDP_ranking[-c(1:5),-c(3,6)]
df$Ranking <- as.numeric(df$Ranking)
df <- df[order(df$Ranking),]
df <- head(df, 20)
df$GDP <- gsub(",","",df$GDP)
df$GDP <- gsub(" ","",df$GDP)
df$GDP <- gsub("-","",df$GDP)
df$GDP <- as.numeric(df$GDP)
df$GDP_B <- df$GDP / 1000
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
abline(h=c(5000,10000),col=c('darkgray','lightblue',lty=c(4,4)))
GDP_ranking <- read.csv(file="..\\..\\..\\data\\GDP_PPP.csv",
stringsAsFactors = F)
GDP_ranking <<- GDP_ranking
names(GDP_ranking)[1] <- "Country"
names(GDP_ranking)[2] <- GDP_ranking[3,2]
names(GDP_ranking)[4] <- GDP_ranking[3,4]
names(GDP_ranking)[5] <- "GDP"  # paste(GDP_ranking[2,5], GDP_ranking[3,5])
df <- GDP_ranking[-c(1:5),-c(3,6)]
df$Ranking <- as.numeric(df$Ranking)
df <- df[order(df$Ranking),]
df <- head(df, 20)
df$GDP <- gsub(",","",df$GDP)
df$GDP <- gsub(" ","",df$GDP)
df$GDP <- gsub("-","",df$GDP)
df$GDP <- as.numeric(df$GDP)
df$GDP_B <- df$GDP / 1000
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
','
abline(h=c(5000,10000),col=c('darkgray','lightblue',lty=c('dotdash','dotdash')))
abline(h=c(5000,10000),col=c('darkgray','lightblue'),lty=c('dotdash','dotdash'))
abline(h=c(5000,10000),col=c('darkgray','lightblue'),lty=c('dotdash','dotdash'))
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
abline(h=c(5000,10000),col=c('darkgray','lightblue'),lty=c('dotdash','dotdash'))
barplot(df$GDP_B,
main="2018년 국가별 GDP 순위(상위20개국)",
names.arg=df$Economy,
xlab='Nations',
ylab='unit($Billion)',
ylim=c(0,25000),
col=rainbow(20),
cex.names=0.8
)
abline(h=c(5000,10000),col=c('darkgray','lightblue'),lty=c('dotdash','dotdash'))
as.numeric("27,000")
as.numeric(gsub(",","","27,000"))
