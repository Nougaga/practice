# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
# 5) 변수 선택
result_pred <- ifelse(pred < 0.5, 0, 1)
(pred_tbl <- table(result_pred, test$vs))
# 6) 결과 비교
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
########## 예제 mtcars ##########
# mtcars 데이터셋 이용 아래와 같이 작성해보세요 :)
# 1) 데이터 준비
data(mtcars)
data <- mtcars
head(data);str(data);dim(data)
data <- data[,c("mpg","am","vs")]
table(data$vs)
data$vs <- as.factor(data$vs)
str(data)
# 2) 8:2 데이터 나누기
idx <- sample(1:nrow(data), nrow(data)*0.8)
train <- data[idx,]
test <- data[-idx,]
head(train);head(test)
# 3) 종속변수 vs, 독립변수 mpg + am로 모형 적합
model <- glm(vs~mpg+am, data=train, family=binomial)
summary(model)
#
# Call:
#   glm(formula = vs ~ mpg + am, family = binomial, data = train)
#
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
# 5) 변수 선택
result_pred <- ifelse(pred < 0.5, 0, 1)
# 6) 결과 비교
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
# Confusion Matrix and Statistics
#
#
# result_pred 0 1
# 0 3 1
# 1 0 3
#
# Accuracy : 0.8571
# 95% CI : (0.4213, 0.9964)
# No Information Rate : 0.5714
# P-Value [Acc > NIR] : 0.1243
#
# Kappa : 0.72
#
# Mcnemar's Test P-Value : 1.0000
#
#             Sensitivity : 1.0000
#             Specificity : 0.7500
#          Pos Pred Value : 0.7500
#          Neg Pred Value : 1.0000
#              Prevalence : 0.4286
#          Detection Rate : 0.4286
#    Detection Prevalence : 0.5714
#       Balanced Accuracy : 0.8750
########## 예제 mtcars ##########
# mtcars 데이터셋 이용 아래와 같이 작성해보세요 :)
# 1) 데이터 준비
data(mtcars)
dataRaw <- mtcars
head(dataRaw);str(dataRaw);dim(dataRaw)
data <- dataRaw[,c("mpg","am","vs")]
table(data$vs)
data$vs <- as.factor(data$vs)
str(data)
# 2) 8:2 데이터 나누기
idx <- sample(1:nrow(data), nrow(data)*0.8)
train <- data[idx,]
test <- data[-idx,]
head(train);head(test)
# 3) 종속변수 vs, 독립변수 mpg + am로 모형 적합
model <- glm(vs~mpg+am, data=train, family=binomial)
summary(model)
#
# Call:
#   glm(formula = vs ~ mpg + am, family = binomial, data = train)
#
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
result_pred <- ifelse(pred < 0.5, 0, 1)
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
# 5) 변수 선택
# 6) 결과 비교
########## 예제 mtcars ##########
# mtcars 데이터셋 이용 아래와 같이 작성해보세요 :)
# 1) 데이터 준비
data(mtcars)
dataRaw <- mtcars
head(dataRaw);str(dataRaw);dim(dataRaw)
table(data$vs)
data$vs <- as.factor(data$vs)
str(data)
# 2) 8:2 데이터 나누기
idx <- sample(1:nrow(data), nrow(data)*0.8)
train <- data[idx,]
test <- data[-idx,]
head(train);head(test)
# 3) 종속변수 vs, 독립변수 mpg + am로 모형 적합
model <- glm(vs~mpg+am, data=train, family=binomial)
summary(model)
#
# Call:
#   glm(formula = vs ~ mpg + am, family = binomial, data = train)
#
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
result_pred <- ifelse(pred < 0.5, 0, 1)
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
# 5) 변수 선택
model <- glm(vs~mpg+am, data=data, family=binomial)
# 6) 결과 비교
# 5) 변수 선택
model2 <- glm(vs~., data=data, family=binomial)
model2
########## 예제 mtcars ##########
# mtcars 데이터셋 이용 아래와 같이 작성해보세요 :)
# 1) 데이터 준비
data(mtcars)
dataRaw <- mtcars
head(dataRaw);str(dataRaw);dim(dataRaw)
table(data$vs)
data$vs <- as.factor(data$vs)
str(data)
# 2) 8:2 데이터 나누기
idx <- sample(1:nrow(data), nrow(data)*0.8)
train <- data[idx,]
test <- data[-idx,]
head(train);head(test)
# 3) 종속변수 vs, 독립변수 mpg + am로 모형 적합
model <- glm(vs~mpg+am, data=train, family=binomial)
summary(model)
#
# Call:
#   glm(formula = vs ~ mpg + am, family = binomial, data = train)
#
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
result_pred <- ifelse(pred < 0.5, 0, 1)
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
# 5) 변수 선택
model2 <- glm(vs~., data=data, family=binomial)
model2
summary(model2)
# 5) 변수 선택
train
########## 예제 mtcars ##########
# mtcars 데이터셋 이용 아래와 같이 작성해보세요 :)
# 1) 데이터 준비
data(mtcars)
data <- mtcars
head(data);str(data);dim(data)
table(data$vs)
data$vs <- as.factor(data$vs)
str(data)
# 2) 8:2 데이터 나누기
idx <- sample(1:nrow(data), nrow(data)*0.8)
train <- data[idx,]
test <- data[-idx,]
head(train);head(test)
# 3) 종속변수 vs, 독립변수 mpg + am로 모형 적합
model <- glm(vs~mpg+am, data=train, family=binomial)
summary(model)
#
# Call:
#   glm(formula = vs ~ mpg + am, family = binomial, data = train)
#
# Deviance Residuals:
#   Min       1Q   Median       3Q      Max
# -2.0105  -0.5470  -0.1424   0.3483   1.5416
#
# Coefficients:
#   Estimate Std. Error z value Pr(>|z|)
# (Intercept) -10.6280     4.4167  -2.406   0.0161 *
#   mpg           0.5877     0.2489   2.361   0.0182 *
#   am           -2.7742     1.7710  -1.566   0.1172
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# (Dispersion parameter for binomial family taken to be 1)
#
# Null deviance: 34.617  on 24  degrees of freedom
# Residual deviance: 16.819  on 22  degrees of freedom
# AIC: 22.819
#
# Number of Fisher Scoring iterations: 6
#
# 4) 예측
pred <- predict(model, newdata=test, type="response")
pred; summary(pred)
# Mazda RX4 Hornet 4 Drive        Valiant     Duster 360       Merc 280    Honda Civic  Porsche 914-2
# 0.431706197    0.937954957    0.185557811    0.001815245    0.479808269    0.999991492    0.997719630
# Min.  1st Qu.   Median     Mean  3rd Qu.     Max.
# 0.001815 0.308632 0.479808 0.576365 0.967837 0.999992
result_pred <- ifelse(pred < 0.5, 0, 1)
pred_tbl <- table(result_pred, test$vs)
library(caret)
confusionMatrix(pred_tbl)
# 5) 변수 선택
train
model2 <- glm(vs~., data=data, family=binomial)
summary(model2)
# 6) 결과 비교
# 5) 변수 선택
train
# 5) 변수 선택
model2 <- glm(vs~., data=train, family=binomial)
summary(model2)
# 5) 변수 선택
str(train)
model2 <- glm(vs~mpg, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl , data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat, data=train, family=binomial)
library(Hmisc)
Hmisc::rcorr(as.matrix(train), type="pearson")
library(corrgram)
corrgram::corrgram(as.matrix(train), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars), upper.panel = panel.conf)
model2 <- glm(vs~mpg+cyl, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl, data=train, family=binomial);model2
model2 <- glm(vs~mpg+cyl, data=train, family=binomial);summary(model2)
# 5) 변수 선택
str(train)
corrgram::corrgram(as.matrix(mtcars[,c(-2)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6)]), upper.panel = panel.conf)
# -2cyl -6wt
model2 <- glm(vs~mpg+disp+hp+drat+qsec+am+gear+carb, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6,-9)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6,-8)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6,-10)]), upper.panel = panel.conf)
# -2cyl -6wt -10gear
model2 <- glm(vs~mpg+disp+hp+drat+qsec+am+carb, data=train, family=binomial)
# 5) 변수 선택
str(train)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-6,-8,-10)]), upper.panel = panel.conf)
# -2cyl -6wt -10gear
model2 <- glm(vs~mpg+disp+drat+qsec+am+carb, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-4,-6,-8,-10)]), upper.panel = panel.conf)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+drat+qsec+am+carb, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-3,-4,-6,-8,-10)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-3,-4,-5,-6,-8,-10)]), upper.panel = panel.conf)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec+am+carb, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec+carb, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec+am+carb, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec+am, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-2,-3,-4,-5,-6,-8,-10,-11)]), upper.panel = panel.conf)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec+am, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+am, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+qsec, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial);summary(model2)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
# -2cyl -4hp -6wt -8vs -10gear
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+am+gear+carb, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c()]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-9)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-8)]), upper.panel = panel.conf)
model2 <- glm(vs~cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+hp+drat+wt+am+gear+carb, data=train, family=binomial)
# 1) 데이터 로딩 및 서브셋
data(iris)
head(iris);str(iris);dim(iris)
data <- iris[iris$Species != "virginica",]
?factor
data$Species <- factor(data$Species, levels=c("setosa","versicolor"), labels = c(1,2))
str(data$Species)
corrgram::corrgram(as.matrix(mtcars[,c(-8)]), upper.panel = panel.conf)
model2 <- glm(vs~mpg+hp+drat+wt+qsec+am+carb, data=train, family=binomial)
# 5) 변수 선택
str(train)
corrgram::corrgram(as.matrix(mtcars[,c(-8,-10)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,c(-8,-10,-11)]), upper.panel = panel.conf)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-8:-11)]), upper.panel = panel.conf)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+qsec, data=train, family=binomial)
model2 <- glm(vs~mpg+qsec, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial);summary(model2)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp, data=train, family=binomial)
model2 <- glm(vs~hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(-8)]), upper.panel = panel.conf)
# 5) 변수 선택
str(train)
model2 <- glm(vs~mpg+cyl+disp, data=train, family=binomial);summary(model2)
?step
model2 <- step(object=train, trace=F, direction='backward')
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial);summary(model2)
model2 <- step(object=model2, trace=F, direction='backward')
corrgram::corrgram(as.matrix(mtcars[,c(-8)]), upper.panel = panel.conf)
model2 <- glm(vs~mpg+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
+cyl
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
+hp
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear, data=train, family=binomial)
corrgram::corrgram(as.matrix(mtcars[,c(9:11)]), upper.panel = panel.conf)
corrgram::corrgram(as.matrix(mtcars[,]), upper.panel = panel.conf)
model2 <- glm(vs~mpg+cyl+disp+hp+qsec+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl+disp+hp+qsec, data=train, family=binomial)
model2 <- glm(vs~cyl+disp+hp+qsec, data=train, family=binomial)
model2 <- glm(vs~cyl+hp+qsec, data=train, family=binomial)
model2 <- glm(vs~cyl+qsec, data=train, family=binomial)
vif(train)
library(car)
vif(train)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+qsec, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+hp, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+hp, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+mpg, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+wt, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+crab, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+carb, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+drat, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+gear, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl+am, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg+cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~mpg, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~disp, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~hp, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~cyl, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model2 <- glm(vs~hp+wt, data=train, family=binomial);summary(model2)
# model2 <- glm(vs~mpg+cyl+disp+hp+drat+wt+qsec+am+gear+carb, data=train, family=binomial)
model$fitted.values
step <- step(model, direction = 'backward')
step <- step(model, direction = 'backward')
step <- step(model, direction = 'forward')
step <- step(model)
