rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
html_main_text <- html_main %>% html_text()
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(temp, pattern=PATTERN)
html_main_p <- html_main %>% html_nodes("p") %>% html_text()
temp <- grep(PATTERN,html_main_p)
data$items$idx_p_m <- temp[1]
data$items$cnt_p_m <- length(temp)
data$items$daysdiff <- as.numeric(data$lastBuildDate2 - data$items$postdate2[1])
View(data$items)
# 본문 스크래핑
for (i in 1:2){
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
html_main_text <- html_main %>% html_text()
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(temp, pattern=PATTERN)
html_main_p <- html_main %>% html_nodes("p") %>% html_text()
temp <- grep(PATTERN,html_main_p)
data$items$idx_p_m <- temp[1]
data$items$cnt_p_m <- length(temp)
data$items$daysdiff <- as.numeric(data$lastBuildDate2 - data$items$postdate2[i])
}
View(data$items)
data$items$daysdiff <- as.numeric(data$lastBuildDate2 - data$items$postdate2)
View(data$items)
# 본문 스크래핑
for (i in 1:2){
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
html_main_text <- html_main %>% html_text()
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(temp, pattern=PATTERN)
html_main_p <- html_main %>% html_nodes("p") %>% html_text()
temp <- grep(PATTERN,html_main_p)
data$items$idx_p_m[i] <- temp[1]
data$items$cnt_p_m[i] <- length(temp)
}
View(data$items)
# 본문 스크래핑
for (i in 1:100){
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
html_main_text <- html_main %>% html_text()
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(temp, pattern=PATTERN)
html_main_p <- html_main %>% html_nodes("p") %>% html_text()
temp <- grep(PATTERN,html_main_p)
data$items$idx_p_m[i] <- temp[1]
data$items$cnt_p_m[i] <- length(temp)
}
View(data$items)
i = 1
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
html_main_text <- html_main %>% html_text()
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(temp, pattern=PATTERN)
vec_text <- html_main %>% html_nodes("p") %>% html_text()
temp <- grep(PATTERN, vec_text)
data$items$idx_p_m[i] <- temp[1]
data$items$cnt_p_m[i] <- length(temp)
vec_text
View(vec_text)
test <- paste(vec_text, sep=" ")
test
test <- cat(vec_text, sep=" ")
test <- cat(vec_text, sep=" ")
test
test <- cat(vec_text, collapse=" ")
test <- paste(vec_text, collapse=" ")
test
test <- gsub("[[:space:]]{2,}","",test)
test
test <- gsub("[[:space:]]{2,}","",test)
test
temp
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
Encoding(temp) <- "bytes"
temp <- substr(temp, 1, 300)
Encoding(temp) <- "UTF-8"
temp
temp <- gsub("\n"," ",html_main_text)
temp <- gsub("[[:space:]]{2,}","",temp)
temp
test
test
test
temp
nchar(test)
nchar(temp)
test <- paste(vec_text, collapse=" ")
test
test <- gsub("[[:space:]]{2,}"," ",test)
test
nchar(test)
test <- gsub("[[:space:]]{2,}","",test)
nchar(test)
test <- paste(vec_text, collapse=" ")
test <- gsub("[[:space:]]{2,}","",test)
test
write(test,"테스트.txt")
View(vec_text)
vec_text[vec_text=="<U+200B>"]
vec_text[vec_text=="<U+200B> "]
grep("<U+200B>", vec_text)
len(vec_text[2])
length(vec_text[2])
length(vec_text[1])
nchar(vec_text[2])
nchar(vec_text[1])
nchar(vec_text[2])
vec_text[2]
vec_text[vec_text!=vec_text[2]]
vec_text[vec_text==vec_text[2]]
nchar(vec_text)
length(vec_text)
vec_text2 <- vec_text[vec_text!=vec_text[2]]
length(vec_text2)
# 본문 내용
vec_text <- html_main %>% html_nodes("p") %>% html_text()
vec_text[2]
View(vec_text[2])
<U+200B>
"<U+200B>"
nchar(vec_text[2], type="bytes")
OBSTACLE1 <- vec_text[2]
OBSTACLE!
### </function> ##########################################
### <script> #############################################
test_res <- get_blogData(ONEPIECE, 1, JSON)
OBSTACLE1
nchar(OBSTACLE1)
?save
save(OBSTACLE1, file="obstacle1.Rdata")
rm(OBSTACLE1)
OBSTACLE1
load("obstacle1.RData")
OBSTACLE1
save(OBSTACLE1, file="obstacle.Rdata")
load("obstacle.RData")
vec_text <- vec_text[vec_text!=OBSTACLE1]
chr_text <- paste(vec_text, collapse=" ")
chr_text <- gsub("[[:space:]]{2,}","",chr_text)
chr_text
nchar(chr_text)
Encoding(chr_text) <- "bytes"
chr_text <- substr(chr_text, 1, 300)
Encoding(chr_text) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(chr_text, pattern=PATTERN)
vec_text_grep <- grep(PATTERN, vec_text)
data$items$idx_p_m[i] <- vec_text_grep[1]
data$items$cnt_p_m[i] <- length(vec_text_grep)
View(data$items)
test_res2 <- glaemfdj(test_res, ONEPIECE)
# 유의미할 것 같은 데이터로 변환하는 func
glaemfdj <- function(RAWDATA, PATTERN){
# postdate2   작성일(날짜 형식으로 변환됨)
# cnt_kw_t    글 제목에서 키워드 수
# cnt_kw_d    글 요약에서 키워드 수
# cnt_kw_m    글 본문에서 키워드 수
# cnt_href_m  글 본문에서 외부 링크 수
# cnt_kw_m300 글 본문의 처음 300bytes(글 요약 후보)에서 키워드 수
# idx_p_m     글 본문에서 키워드가 처음 등장한 문단 위치
# cnt_p_m     글 본문에서 키워드가 등장한 문단 수
# daysdiff    검색일 - 작성일
data <- fromJSON(RAWDATA)
# 작성일을 data 구조로 변경
data$items$postdate2 <- as.Date(data$items[,"postdate"],format="%Y%m%d")
# 글 제목에 들어있는 키워드 수
data$items$cnt_kw_t <- str_count(data$items[,"title"], pattern="<b>")
# 글 본문 요약에 들어있는 키워드 수
data$items$cnt_kw_d <- str_count(data$items[,"description"], pattern="<b>")
# 검색기준일을 data 구조로 변경
temp <- strsplit(data[["lastBuildDate"]]," ")
temp <- unlist(temp)
temp[1] <- gsub(",","",temp[1])
temp <- paste(temp[2], tf_month(temp[3]), temp[4])
data[["lastBuildDate2"]] <- as.Date(temp, "%d %m %Y")
rm(temp)
# 본문 스크래핑
for (i in 1:100){
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
vec_text <- html_main %>% html_nodes("p") %>% html_text()
vec_text <- vec_text[vec_text!=OBSTACLE1]
chr_text <- paste(vec_text, collapse=" ")
chr_text <- gsub("[[:space:]]{2,}","",chr_text)
Encoding(chr_text) <- "bytes"
chr_text <- substr(chr_text, 1, 300)
Encoding(chr_text) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(chr_text, pattern=PATTERN)
vec_text_grep <- grep(PATTERN, vec_text)
data$items$idx_p_m[i] <- vec_text_grep[1]
data$items$cnt_p_m[i] <- length(vec_text_grep)
}
data$items$daysdiff <- as.numeric(data$lastBuildDate2 - data$items$postdate2)
return(data)
}
test_res2 <- glaemfdj(test_res, ONEPIECE)
test_res2$items
View(test_res2$items)
str_count(chr_text,"^^")
RAWDATA <- test_res
PATTERN <- ONEPIECE
i = 1
data <- fromJSON(RAWDATA)
# 작성일을 data 구조로 변경
data$items$postdate2 <- as.Date(data$items[,"postdate"],format="%Y%m%d")
# 글 제목에 들어있는 키워드 수
data$items$cnt_kw_t <- str_count(data$items[,"title"], pattern="<b>")
# 글 본문 요약에 들어있는 키워드 수
data$items$cnt_kw_d <- str_count(data$items[,"description"], pattern="<b>")
# 검색기준일을 data 구조로 변경
temp <- strsplit(data[["lastBuildDate"]]," ")
temp <- unlist(temp)
temp[1] <- gsub(",","",temp[1])
temp <- paste(temp[2], tf_month(temp[3]), temp[4])
data[["lastBuildDate2"]] <- as.Date(temp, "%d %m %Y")
rm(temp)
test_gsub <- data$items[i,"link"]
test_gsub <- gsub("https://blog.naver.com/","",test_gsub)
test_gsub <- gsub("[?]","=",test_gsub)
test_gsub <- strsplit(test_gsub, "=")
test_gsub <- unlist(test_gsub)
blogId <- test_gsub[1]; logNo <- test_gsub[4]
rm(test_gsub)
url_test <- paste("https://blog.naver.com/PostView.nhn?blogId=",blogId,"&logNo=",logNo,"&redirect=Dlog&widgetTypeCall=true&directAccess=false",sep="")
# html 코드 전부
html_test <- read_html(url_test, options = "HUGE")
# pc/mobile, editer ver.에 따라 container가 다름
html_main <- html_test %>% html_node("div.se-main-container")
if (length(html_main)==0){
html_main <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main)==0){
html_main <- html_test %>% html_node("div#postViewArea")
}
data$items$cnt_kw_m[i] <- str_count(html_main, pattern=PATTERN)
data$items$cnt_href_m[i] <- str_count(html_main, pattern="<a href=\"http")
# 본문 내용
vec_text <- html_main %>% html_nodes("p") %>% html_text()
vec_text <- vec_text[vec_text!=OBSTACLE1]
chr_text <- paste(vec_text, collapse=" ")
chr_text <- gsub("[[:space:]]{2,}","",chr_text)
chr_text300 <- chr_text
Encoding(chr_text300) <- "bytes"
chr_text300 <- substr(chr_text300, 1, 300)
Encoding(chr_text300) <- "UTF-8"
data$items$cnt_kw_m300[i] <- str_count(chr_text300, pattern=PATTERN)
str_count(chr_text,"^^")
vec_text_grep <- grep(PATTERN, vec_text)
data$items$idx_p_m[i] <- vec_text_grep[1]
data$items$cnt_p_m[i] <- length(vec_text_grep)
data$items$daysdiff <- as.numeric(data$lastBuildDate2 - data$items$postdate2)
View(data$items)
chr_text
write(chr_text,"테스트.txt")
write(chr_text,"테스트.txt")
str_count(chr_text,"^^")
str_count(chr_text,"ㅎㅎㅎ")
write(chr_text,"테스트.txt")
str_count(chr_text,"ㅎㅎ")
str_count(chr_text,"^^")
str_count(chr_text,"\^\^")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","^^")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","[\^]{2}")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","[^]{2}")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","[?^]{2}")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","[^]{2}")
str_count("뭘어떻게해야^^가^^감지되는건데요^^","[?^]{2}")
str_count(chr_text,"[?^]{2}")
data$items$emo_w_m <- str_count(chr_text,"[?^]{2}")
str_count(chr_text, "ㅎㅎ")
data$items$emo_w_m[i] <- str_count(chr_text,"[?^]{2}") + str_count(chr_text, "ㅎㅎ")
write_html(html_main, "테스트.html")
url_zmni123 <- "https://blog.naver.com/PostView.nhn?blogId=zmni123&logNo=222067590060&redirect=Dlog&widgetTypeCall=true&directAccess=false"
html_zmni123 <- url_zmni123 %>% read_html()
html_main_zmni123 <- html_test %>% html_node("div.se-main-container")
if (length(html_main_zmni123)==0){
html_main_zmni123 <- html_test %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main_zmni123)==0){
html_main_zmni123 <- html_test %>% html_node("div#postViewArea")
}
html_main_zmni123
write_html(html_main_zmni123,"zmni123blogData.html")
html_zmni123 <- url_zmni123 %>% read_html()
html_main_zmni123 <- html_zmni123 %>% html_node("div.se-main-container")
if (length(html_main_zmni123)==0){
html_main_zmni123 <- html_zmni123 %>% html_node("div.se_component_wrap.sect_dsc.__se_component_area")
}
if (length(html_main_zmni123)==0){
html_main_zmni123 <- html_zmni123 %>% html_node("div#postViewArea")
}
write_html(html_main_zmni123,"zmni123blogData.html")
str(html_main_zmni123)
write(html_main_zmni123,"텍스트로써져라.txt")
zmni123blogData <- read_html("zmni123blogData.html")
View(zmni123blogData)
View(zmni123blogData)
zmni123blogData <- readLines("zmni123blogData.html")
zmni123blogData
zmni123blogData <- readLines(html_main_zmni123)
a1 <- html_main_zmni123 %>% html_nodes("img") %>% html_attr(src)
a1 <- html_main_zmni123 %>% html_nodes("img") %>% html_attr("src")
a1
LINE_STICKER1 <- "https://storep-phinf.pstatic.net/linesoft_01"
LINE_STICKER2 <- "https://storep-phinf.pstatic.net/linepower_01"
LINE_STICKER3 <- "https://storep-phinf.pstatic.net/linesweet_01"
LINE_STICKER4 <- "https://storep-phinf.pstatic.net/bcosall_01"
LINE_STICKER5 <- "https://storep-phinf.pstatic.net/bcosall_02"
LINE_STICKER6 <- "https://storep-phinf.pstatic.net/bt21_01"
?save
rm(OBSTACLE1)
# saved specially ----------
# OBSTACLE1: <U+200B>
load("obstacles.RData")
OBSTACLE1
save(LINE_STICKER1,LINE_STICKER2,LINE_STICKER3,LINE_STICKER4,LINE_STICKER5,LINE_STICKER6,
file="line_stickers.RData")
rm(LINE_STICKER1,LINE_STICKER2,LINE_STICKER3,LINE_STICKER4,LINE_STICKER5,LINE_STICKER6)
load("line_stickers.RData")
vec_img <- html_main %>% html_nodes("img") %>% html_attr("src")
vec_img
str_count(vec_img, LINE_STICKER1)
chr_img <- paste(vec_img, collapse=" ")
str_count(chr_img, LINE_STICKER1)
data$items$emo_LINE_m[i] <-
str_count(chr_img, LINE_STICKER1) +
str_count(chr_img, LINE_STICKER2) +
str_count(chr_img, LINE_STICKER3) +
str_count(chr_img, LINE_STICKER4) +
str_count(chr_img, LINE_STICKER5) +
str_count(chr_img, LINE_STICKER6)
View(data$items)
View(data)
View(data)
# 점수
data$items$score <- (data$total - 0:99)/data$total
View(data$items)
getwd()
all_list <- read.csv("powercontents_keyword\\powercontents_keyword.xlsx")
View(all_list)
all_list <- read.csv("powercontents_keyword\\powercontents_keyword.csv")
View(all_list)
ONEPIECE <<- "원피스"
S20 <<- "S20"
TOEICSPEAKING <- "토익스피킹"
ENGINEER1 <- "환경위해관리기사"
LM <- "linear regression"
BE <- "bernoulli's equation"
ADS1 <- "상위 노출"
ADS2 <- "광고 문의"
save(ONEPIECE, S20, TOEICSPEAKING, ENGINEER1, LM, BE, ADS1, ADS2, file="search_keywords.RData")
load("search_keywords.RData")
(load("search_keywords.RData"))
rm(ONEPIECE)
ONEPIECE
(load("search_keywords.RData"))
ONEPIECE
View(all_list)
?grepl
onepiece <- all_list[grepl(ONEPIECE, all_list$키워드),]
onepiece
onepiece <- all_list[grepl(ONEPIECE, all_list$키워드),"키워드"]
onepiece
(load("search_keywords.RData"))
onepiece <- all_list[grepl("원피스", all_list$키워드),"키워드"]
smartphone <- all_list[grepl("스마트폰", all_list$키워드)|grepl("휴대폰", all_list$키워드),"키워드"]
onepiece <- all_list[grepl("원피스", all_list$키워드),"키워드"]
smartphone <- all_list[grepl("스마트폰", all_list$키워드)|grepl("휴대폰", all_list$키워드),"키워드"]
toeicspeaking <- all_list[grepl("토익스피킹", all_list$키워드),"키워드"]
engineer <- all_list[grepl("기사", all_list$키워드)&all_list$대분류=="교육/취업","키워드"]
onepiece <- all_list[grepl("원피스", all_list$키워드),"키워드"];
smartphone <- all_list[grepl("스마트폰", all_list$키워드)|grepl("휴대폰", all_list$키워드),"키워드"];
toeicspeaking <- all_list[grepl("토익스피킹", all_list$키워드),"키워드"];
engineer <- all_list[grepl("기사", all_list$키워드)&all_list$대분류=="교육/취업","키워드"];
engineer
onepiece
smartphone
toeicspeaking
